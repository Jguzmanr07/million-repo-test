apiVersion: v1
kind: Service
metadata:
  name: python-microservice
  labels:
    app: python-microservice
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: python-microservice
---
apiVersion: v1
kind: Pod
metadata:
  name: python-microservice-pod
  namespace: tech-prod  # Nombre de Namespace ajustado
  labels:
    app: python-microservice
spec:
  securityContext:
    runAsUser: 10000
    runAsGroup: 30000
    fsGroup: 20000
    seccompProfile:
      type: RuntimeDefault
  containers:
  - name: python-microservice-container
    image: python:3.10-alpine
    resources:
      limits:
        memory: "3Gi"  # Limita el uso de memoria del contenedor a 3 GB
    ports:
    - containerPort: 8080
    env:
    - name: ENVIRONMENT
      value: "production"
    - name: INTERNAL_NETWORK
      value: "internal prod"
    securityContext:
      capabilities:
        drop:
        - ALL
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
    livenessProbe:
      httpGet:
        path: /healthz
        port: 8080
      initialDelaySeconds: 30
      periodSeconds: 10
    readinessProbe:
      httpGet:
        path: /readiness
        port: 8080
      initialDelaySeconds: 5
      periodSeconds: 10
    volumeMounts:
    - name: config-volume
      mountPath: /app/config
      readOnly: true
  volumes:
  - name: config-volume
    configMap:
      name: app-config
  automountServiceAccountToken: false
  dnsPolicy: ClusterFirst
  hostNetwork: false
  restartPolicy: Always
  serviceAccountName: default
  nodeSelector:
    million.com/network: internal-prod  # Selecciona nodos etiquetados con million.com/network: internal-prod
