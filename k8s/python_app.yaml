apiVersion: v1
kind: Namespace
metadata:
  name: tech-prod
---
apiVersion: v1
kind: Pod
metadata:
  name: python-microservice-pod
  namespace: tech-prod
  labels:
    app: python-microservice
spec:
  nodeSelector:
    nodetype: docker-desktop
  containers:
  - name: python-microservice-container
    image: jguzman07/millionrepotest:latest
    # resources:
    #   limits:
    #     memory: "3Gi"
    #     cpu: "1"
    ports:
    - containerPort: 80
    env:
    - name: ENVIRONMENT
      value: "production"
    - name: INTERNAL_NETWORK
      value: "internal prod"
    securityContext:
      capabilities:
        drop:
        - ALL
      allowPrivilegeEscalation: false
      runAsUser: 10000
      readOnlyRootFilesystem: true
    livenessProbe:
      httpGet:
        path: /healthz
        port: 80
      initialDelaySeconds: 30
      periodSeconds: 10
    readinessProbe:
      httpGet:
        path: /readiness
        port: 80
      initialDelaySeconds: 5
      periodSeconds: 10
    volumeMounts:
    - name: config-volume
      mountPath: /app/config
      readOnly: true
  volumes:
  - name: config-volume
    configMap:
      name: app-config
---
apiVersion: v1
kind: Service
metadata:
  name: tech-prod-svc
  namespace: tech-prod
  labels:
    app: python-microservice
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: python-microservice
